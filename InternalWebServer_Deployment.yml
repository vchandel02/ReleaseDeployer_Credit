---
- name: External Web Server Deployment
  hosts: "{{MachineGroupName}}"
  become: yes
  become_method: runas
  become_user: System
  gather_facts: yes
  vars_files:
   - ~/ReleaseDeployer/Ansible/Credit_Processing/CommonVars/InternalWebServer.yml

  ######## Pre deployments steps ########

  pre_tasks:

    ######## Create Package folder ########
    - name: Create Package folder
      win_file:
        path: "{{PackageFolderPath}}"
        state: directory

    ######## Download External web server package ########

    - name: Download Internal web server package package {{PackageFileName}}{{PackageFileExtension}} from Ansible controller machine to Internal web server
      win_copy:
        src: "{{ PackageSourceLocation }}/{{PackageFileName}}{{PackageFileExtension}}"
        dest: "{{ DestinationFolderPath }}"
        remote_src: no
      
    ######## Extract PlatformCode package ########

    - name: Extract {{DestinationFolderPath}} to {{UnzipFolderPath}}
      win_unzip:
        src: "{{DestinationFolderPath}}"
        dest: "{{UnzipFolderPath}}"
        delete_archive: yes

    - name: Check if the CoreApp folder exists in the package
      win_stat:
        path: "{{PackageFolderPath}}\\{{PackageFileName}}\\{{CoreAppModuleName}}"
      register: folder_check_CoreApp

    ######## Take backup of CoreCardAppLinks folder  ########
    - name: Take backup of CoreApp folder
      win_shell: |
        Copy-Item "{{ RemoteHost_CoreApp_Folder_Path }}" -Destination {{ BackupFolderPath }}\\{{ CoreAppModuleName }}_{{ ansible_date_time.iso8601_basic_short}}\ -Recurse
      when: folder_check_CoreApp.stat.exists
    

  ########################################################################################################

  ######## Deployement starts ########

  tasks:

  ######## Deploy CoreApp  ########
    - name: Deploy CoreApp
      win_shell: |
        Copy-Item "{{ UnzipFolderPath }}\\{{ CoreAppModuleName }}\*" -Destination "{{RemoteHost_CoreApp_Folder_Path}}" -Recurse -Force
      when: folder_check_CoreApp.stat.exists