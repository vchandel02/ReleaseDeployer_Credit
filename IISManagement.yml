---
- name: CoreCARD IIS Management (Start)
  hosts: "{{MachineGroupName}}"
  become: yes
  become_method: runas
  become_user: System
  gather_facts: no
  vars_files:
   - CommonVars/UserCredentials_Vars.yml
  
  tasks:

    
    
    ######## Stop IIS ########
    - name: Stop IIS
      win_service:
        name: W3SVC
        state: stopped
      register: stop_iis
      when: OperationType == "stopiis"

    - name: Verify IIS Service
      debug: 
        var: stop_iis
      when: OperationType == "stopiis"

    ######## Start IIS ########
    - name: Start IIS
      win_service:
        name: W3SVC
        state: started
      register: start_iis
      when: OperationType == "startiis"

    - name: Verify IIS Service
      debug: 
        var: start_iis
      when: OperationType == "startiis"

    ######## Restart IIS ########
    - name: Restart IIS
      win_service:
        name: W3SVC
        state: restarted
      register: restart_iis
      when: OperationType == "restartiis"

    - name: Verify IIS Service
      debug: 
        var: restart_iis
      when: OperationType == "restartiis"

    ######## Get IIS WebSite AppPool Name ########
    - name: Get IIS AppPool Name for all the given websites
      win_shell: |
        $siteType = "{{SiteType}}"
        if($siteType -eq "application")
        {
          $Application = "{{item}}"
          $WebSite = "{{RootWebSiteName | default('') }}"
          (Get-WebApplication -Name $Application | Where ItemXPath -Match $WebSite).applicationPool
        }
        elseif($siteType -eq "website")
        {
          $websiteName = "{{item}}"
          $appPoolName = (Get-Website -Name $websiteName).applicationPool
        }
        Write-Output $appPoolName
      loop: "{{ SiteList }}"
      loop_control:
        loop_var: item
      register: app_pool_name
      when: OperationType == "stopapppool" or OperationType == "startapppool" or OperationType == "restartapppool"  or OperationType == "changeapppooluser"

    - name: Display AppPool Name
      debug:
        var: app_pool_name
      when: OperationType == "stopapppool" or OperationType == "startapppool" or OperationType == "restartapppool" or OperationType == "changeapppooluser"


    ######## Stop AppPool ########
    - name: Stop IIS AppPool
      win_iis_webapppool:
        name: "{{ item.stdout | regex_replace('[\\r\\n\\t]+','')}}"
        state: stopped
      loop: "{{ app_pool_name.results }}"
      loop_control:
        loop_var: item
      register: apppool_stop
      when: OperationType == "stopapppool"

    ######## Verify AppPool ########
    - name: Verify AppPool status
      debug:
        #var: apppool.results[0].info.attributes.state
        var: "{{item.info.attributes.state}}"
      loop: "{{apppool_stop.results}}"
      loop_control:
        loop_var: item
      when: OperationType == "stopapppool"

    ######## Start AppPool ########
    - name: Start IIS AppPool
      win_iis_webapppool:
        name: "{{ item.stdout | regex_replace('[\\r\\n\\t]+','')}}"
        state: started
      loop: "{{ app_pool_name.results }}"
      loop_control:
        loop_var: item
      register: apppool_start
      when: OperationType == "startapppool"

    ######## Verify AppPool ########
    - name: Verify AppPool status
      debug:
        #var: apppool.results[0].info.attributes.state
        var: "{{item.info.attributes.state}}"
      loop: "{{apppool_start.results}}"
      loop_control:
        loop_var: item
      when: OperationType == "startapppool"

    ######## Restart AppPool ########
    - name: Restart IIS AppPool
      win_iis_webapppool:
        name: "{{ item.stdout | regex_replace('[\\r\\n\\t]+','')}}"
        state: restarted
      loop: "{{ app_pool_name.results }}"
      loop_control:
        loop_var: item
      register: apppool_restart
      when: OperationType == "restartapppool"

    ######## Verify AppPool ########
    - name: Verify AppPool status
      debug:
        #var: apppool.results[0].info.attributes.state
        var: "{{item.info.attributes.state}}"
      loop: "{{apppool_restart.results}}"
      loop_control:
        loop_var: item
      when: OperationType == "restartapppool"

    ######## Change AppPool User ########
    - name: Change IIS AppPool User
      win_iis_webapppool:
        name: "{{ item.stdout | regex_replace('[\\r\\n\\t]+','') }}"
        state: started
        attributes:
          processModel.identityType: SpecificUser
          processModel.userName: "{{UserType[User_Type].UserName}}"
          processModel.password: "{{UserType[User_Type].Password}}"
          processModel.loadUserProfile: true
      loop: "{{ app_pool_name.results }}"
      loop_control:
        loop_var: item
      register: apppooluserstatus
      when: OperationType == "changeapppooluser"

    - name: Verify AppPool status
      debug:
        #var: apppool.results[0].info.attributes.state
        var: "{{item.info.attributes.state}}"
      loop: "{{apppooluserstatus.results}}"
      loop_control:
        loop_var: item
      when: OperationType == "changeapppooluser"

    ######## Stop Website ########
    - name: Stop Website
      win_iis_website:
        name: "{{ item }}"
        state: stopped
      loop: "{{ SiteList }}"
      loop_control:
        loop_var: item
      register: stopwebsite
      when: OperationType == "stopwebsite"

    - name: Verify Website status
      debug:
        var: stopwebsite
      when: OperationType == "stopwebsite"

    ######## Stop Application ########
    - name: Stop Application
      win_iis_webapplication:
        name: "{{ item }}"
        site: "{{ RootWebSiteName }}" 
        state: stopped
      loop: "{{ ApplicationList }}"
      loop_control:
        loop_var: item
      register: stopapplication
      when: OperationType == "stopapplication"

    - name: Verify Application status
      debug:
        var: stopapplication
      when: OperationType == "stopapplication"

    ######## Start Website ########
    - name: Start Website
      win_iis_website:
        name: "{{ item }}"
        state: started
      loop: "{{ SiteList }}"
      loop_control:
        loop_var: item
      register: startwebsite
      when: OperationType == "startwebsite"

    - name: Verify Website status
      debug:
        var: startwebsite
      when: OperationType == "startwebsite"

    ######## Start Application ########
    - name: Start Application
      win_iis_webapplication:
        name: "{{ item }}"
        site: "{{ RootWebSiteName }}" 
        state: started
      loop: "{{ ApplicationList }}"
      loop_control:
        loop_var: item
      register: application_result
      when: OperationType == "startapplication"

    - name: Check the status of the IIS application
      debug:
        var: application_result
      when: OperationType == "startapplication"