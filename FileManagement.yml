---
- name: File Management (Copy)
  hosts: "{{ MachineGroupName }}"
  become: yes
  become_method: runas
  become_user: System
  gather_facts: no
  vars_files:
    - CommonVars/FileManagement_Vars.yml

  tasks:

    ######## Copy Modules ########
    - name: Set Module Variables
      set_fact:
        ModuleName: "{{ item }}"
        sourceFolder: "{{ modules[item].Package_Path }}"
        destinationFolder: "{{ modules[item].Application_Path }}"
        packagePath: "{{ modules[item].Package_Path }}"
        applicationFolder: "{{ modules[item].Application_Path }}"
        backupFolder: "{{ BackupLocation }}"
      loop: "{{ ModuleNames }}"
      register: module_vars
      when: OperationType == "copy" or OperationType == "backup"
    
    - name: Copy Modules
      win_shell: |
        Write-Host "Copying module: {{ item.ansible_facts.ModuleName }}"
        Write-Host "Source Folder: {{ item.ansible_facts.sourceFolder }}"
        Write-Host "Destination Folder: {{ item.ansible_facts.destinationFolder }}"
        $sourceFolder = "{{ item.ansible_facts.sourceFolder }}\\*"
        $destinationFolder = "{{ item.ansible_facts.destinationFolder }}"
        Copy-Item -Path $sourceFolder -Destination $destinationFolder -Recurse -Force
      loop: "{{ module_vars.results }}"
      loop_control:
        loop_var: item
      register: result_copy
      when: OperationType == "copy"

    - debug:
        var: result_copy
      when: OperationType == "copy"

    ######## Backup Modules ########
    

    - name: Backup Modules
      win_shell: |
        Write-Host "Backup module: {{ item.ansible_facts.ModuleName }}"
        Write-Host "Application Folder: {{ item.ansible_facts.destinationFolder }}"
        Write-Host "Backup Folder: {{ item.ansible_facts.backupFolder }}"

        $applicationFolder = "{{ item.ansible_facts.destinationFolder }}"
        $backupfolder = "{{ BackupLocation }}"
        $backupSubFolder = "{{ item.ansible_facts.ModuleName }}_{{ ansible_date_time.iso8601_basic_short}}"
        $backupFullPath = Join-Path -Path $backupfolder -ChildPath $backupSubFolder
        Copy-Item -Path $applicationFolder -Destination $backupFullPath -Recurse
      loop: "{{ module_vars.results }}"
      loop_control:
        loop_var: item
      register: result_backup
      when: OperationType == "backup"

    ######## Delete File and folder ########

    - name: Delete file or folder
      win_file:
        path: "{{item}}"
        state: absent
      loop: "{{ DeleteList }}"
      loop_control:
        loop_var: item
      register: result_delete
      when: OperationType == "delete"

    - name: Verify deleted files or folders
      debug: 
        var: result_delete
      when: OperationType == "delete"

    ######## Delete folder content ########

    - name: Delete folder content
      win_shell: |
        $folderpath = "{{FolderPath}}"
        Get-ChildItem $folderpath  | Remove-Item -Recurse
      when: OperationType == "deletefoldercontent"

    



    

